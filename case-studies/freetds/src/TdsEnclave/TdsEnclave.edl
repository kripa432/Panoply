/* Enclave.edl - Top EDL file. */

enclave {
    
    include "user_types.h" /* buffer_t */
    include "sgx_eid.h"
    // from "sgx_tstdc.edl" import *;
    /* Import ECALL/OCALL from sub-directory EDLs.
     *  [from]: specifies the location of EDL file. 
     *  [import]: specifies the functions to import, 
     *  [*]: implies to import all functions.
     */
    
    // from "sgx_tstdc.edl" import *;   
    from "sgx_tstdc.edl" import sgx_thread_wait_untrusted_event_ocall, sgx_thread_set_untrusted_event_ocall, sgx_thread_setwait_untrusted_events_ocall, sgx_thread_set_multiple_untrusted_events_ocall, sgx_oc_cpuidex;     
    from "LocalAttestationCode/LocalAttestationCode.edl" import *; 
    from "Thread/Pthread.edl" import *;
    from "SysEnvironment/sgx_time.edl" import *;
    from "TrustedLibrary/locale.edl" import *;
     from "TrustedLibrary/Thread.edl" import *;
    
    // from "EnclaveUtil/util.edl" import *;

    from "SysEnvironment/sgx_pwd.edl" import *;
    from "SysEnvironment/sgx_grp.edl" import *;
    from "SysEnvironment/sgx_utsname.edl" import *;
    from "SysEnvironment/sgx_getopt.edl" import *;
    from "IO/sgx_stdlib.edl" import *;
    from "IO/sgx_fcntl.edl" import *;
    from "IO/sgx_unistd.edl" import *;
    from "IO/sgx_stdio.edl" import *;
    from "IO/sgx_syseventfd.edl" import *;
    from "IO/sgx_syssocket.edl" import *;
    from "IO/sgx_netdb.edl" import *;
    from "IO/sgx_netinetin.edl" import *;
    from "IO/sgx_sysioctl.edl" import *;
    from "IO/sgx_sysuio.edl" import *;
    from "IO/sgx_sysmman.edl" import *;
    from "IO/sgx_poll.edl" import *;
    from "IO/sgx_sysepoll.edl" import *;
    from "IO/sgx_sysselect.edl" import *;
    from "IO/sgx_syssendfile.edl" import *;
    from "IO/sgx_syswait.edl" import *;
    from "IO/sgx_sysstat.edl" import *;
    from "IO/sgx_dirent.edl" import *;
    from "IO/sgx_sysresource.edl" import *;
    from "IO/sgx_arpainet.edl" import *;
    from "IO/sgx_sysctl.edl" import *;
    from "IO/sgx_signal.edl" import *;
    from "ssl.edl" import *;
    from "Net/sgx_ifaddrs.edl" import *;
    from "Net/sgx_netif.edl" import *; 

    from "replacements/sleep.edl" import *;
    from "replacements/strlcat.edl" import *;
    from "replacements/strlcpy.edl" import *;
    from "replacements/readpassphrase.edl" import *;
    from "replacements/poll.edl" import *;
    from "replacements/getpassarg.edl" import *;
    from "tds/threadsafe.edl" import *;
    from "tds/net.edl" import *;
    from "tds/config.edl" import *;
    from "tds/mem.edl" import *;
    from "tds/getmac.edl" import *;
    from "Apps/tsql.edl" import *;
    from "tds/unittest/readconf.edl" import *;      /* Pass test - Should be commented when release */
    from "tds/unittest/charconv.edl" import *;      /* Pass test - Should be commented when release */
    from "tds/unittest/iconv_fread.edl" import *;      /* Pass test - Should be commented when release */
    from "tds/unittest/challenge.edl" import *;      /* Pass test - Should be commented when release */
    from "tds/unittest/convert.edl" import *;      /* Pass test - Should be commented when release */
    from "tds/unittest/corrupt.edl" import *;       /* Pass test - Should be commented when release */
    from "tds/unittest/dataread.edl" import *;      /* Pass test* only 1 test-case crashed - Should be commented when release */
    from "tds/unittest/collations.edl" import *;     
    
    from "tds/unittest/dynamic1.edl" import *;
    from "tds/unittest/flags.edl" import *;
    from "tds/unittest/nulls.edl" import *;
    from "tds/unittest/numeric.edl" import *;
    from "tds/unittest/t0001.edl" import *;
    from "tds/unittest/t0007.edl" import *;
    from "tds/unittest/t0008.edl" import *;
    // from "tds/unittest/testtime.edl" import *;
    from "tds/unittest/testweof.edl" import *;
    from "tds/unittest/bench.edl" import *;
    from "tds/unittest/benchhttpclient.edl" import *;
    from "tds/unittest/testchangelist.edl" import *;
    from "tds/unittest/leproxy.edl" import *;
    from "tds/unittest/regress_main.edl" import *;

    trusted {
        public void ecall_set_communication_enclave_ids(sgx_enclave_id_t tds_id, sgx_enclave_id_t vrfcert_id);
    };


    /* 
     * ocall_print_string - invokes OCALL to display string buffer inside the enclave.
     *  [in]: copy the string buffer to App outside.
     *  [string]: specifies 'str' is a NULL terminated buffer.
     */
    untrusted {
    };

};
