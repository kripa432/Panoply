<!--------------------------------------------------------------------------->
<!-- Copyright (c) 2016 Intel Corporation.				   -->
<!-- 									   -->
<!-- All rights reserved. This program and the accompanying materials	   -->
<!-- are made available under the terms of the Eclipse Public License v1.0 -->
<!-- which accompanies this distribution, and is available at		   -->
<!-- http://www.eclipse.org/legal/epl-v10.html				   -->
<!-- 									   -->
<!-- Contributors:							   -->
<!--     Intel Corporation - initial implementation and documentation	   -->
<!--------------------------------------------------------------------------->
<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="556" MadCap:lastWidth="576">
    <head><title>What can be done with Linux SGX Eclipse Plugin?</title>
        <link href="Resources/Stylesheets/intel_css_styles.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h2>Introducing Intel(R) Software Guard Extensions Eclipse* Plugin</h2>
        <p>The Intel(R) Software Guard Extensions Eclipse* Plug-in helps the enclave developer to maintain enclaves and untrusted related code inside Eclipse* C/C++ projects.   To use this support, add SGX nature to the C/C++ project.  See <a href="Adding_SGX_Nature_to_a_Project.htm">Adding SGX Nature to a Project</a> for details.</p>
        <p>Once the SGX nature is added to a project, you will have access to the SGX commands.  SGX nature adds also a folder called <code>sgx</code> to the root of the project, and a Makefile inside it.   All resources of the project managed by Intel(R) Software Guard Extensions Eclipse Plug-inare located inside this directory.  You can build and run enclaves related code using GNU* Make tool through the Makefile.</p>
        <p>The plugin is generating minimal but ready-to-work code skeletons, complete with their own Makefile having all the required make targets as to call <code>sgx_edger8r</code> tool to generate the proxies and bridges, compile these source, generate a shared object and finally, to sign the enclave with the <code>sgx_sign</code> tool.  This provide a starting point you may build upon.</p>
    </body>
</html>
