<!--------------------------------------------------------------------------->
<!-- Copyright (c) 2016 Intel Corporation.				   -->
<!-- 									   -->
<!-- All rights reserved. This program and the accompanying materials	   -->
<!-- are made available under the terms of the Eclipse Public License v1.0 -->
<!-- which accompanies this distribution, and is available at		   -->
<!-- http://www.eclipse.org/legal/epl-v10.html				   -->
<!-- 									   -->
<!-- Contributors:							   -->
<!--     Intel Corporation - initial implementation and documentation	   -->
<!--------------------------------------------------------------------------->
<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="2008" MadCap:lastWidth="666">
    <head><title>Generate Hash</title>
        <link href="Resources/Stylesheets/intel_css_styles.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h3>Generate Hash</h3>
        <p>Generating hash is the first step in the 2-Steps signing process.To generate hash, use the following steps:</p>
        <ol>
            <li>
                <p>Right-click on project root, go to <b>Software Guard Extensions Tools menu → Two StepSigne Enclave → Generate Hash</b></p>
                <p>
                    <img src="Resources/Images/Two_StepSigne_Enclave_Generate_Hash.png" />
                </p>
                <p class="figcap">Two StepSigne Enclave - Generate Hash</p>
            </li>
            <li>	In the <b>Generate Hash</b> dialog, enter the required inputs to the corresponding fields:<ul><li>Enter the path to the compiled enclave to be signed in the <b>Enclave Path</b> field. Click <b>Select Enclave</b> to open a file dialog to select the enclave.</li><li>In the <b>Hash File Location</b> field , enter the path of the output file that will contain signing materials. By default this file has the same file name as the unsigned enclave, with <code>.hex</code> extension added.  To change the path, click <b>Select File Path</b> to open a file dialog to select the file path.</li><li>In the  <b>Configuration File</b> path field, enter the path of the configuration filefor the generated hash.  Click <b>Select Config</b> to open a dialog to select from all enclave configuration files in the project (similar with the one of the command <b>Update Config</b>).</li></ul></li>
            <li>
                <p>Click <b>OK</b> after you fill in all the fields.  The Intel(R) SGX SDK is launched under the hood with the provided parameters and the hash file is generated.  A dialog box appears to confirm the completion:</p>
                <p>
                    <img src="Resources/Images/Generating_Hash_Completion_Dialog.png" />
                </p>
                <p class="figcap">Generating Hash Completion Dialog</p>
            </li>
        </ol>
        <p>You complete the first step, generating hash, in the two step signing enclave.  The <code>*.hex</code> file may be signed with the external facility, which generates a signature for it and a public verification key.</p>
        <p>If you click <b>OK</b>, the <b>Generate Signed Enclave</b> dialog appears. The required fileds in this dialog have been pre-configured with the paths of the unsigned enclave, the configuration file and of the <code>*.hex</code> file.  To generated the final signed enclave ready for production immediately, click <b>OK</b>.</p>
        <p>
            <img src="Resources/Images/Generate_Signed_Enclave_Dialog_with_Pre_configurations.png" />
        </p>
        <p class="figcap">Generate Signed Enclave Dialog with Pre-configurations</p>
        <p>If you click <b>Cancel</b> in the <b>Generate Signed Enclave</b> dialog, you can continue the signing process later using the <b>Generate Signed Enclave</b> command.</p>
    </body>
</html>
